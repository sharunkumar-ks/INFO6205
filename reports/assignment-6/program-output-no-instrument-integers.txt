2023-03-12 20:58:47 INFO  SortBenchmark - SortBenchmark.main: 1.0.0 (sortbenchmark) with min: 10000 max: 256000 strategy: doubling
2023-03-12 20:58:47 INFO  SorterBenchmark - run: sort 10,000 elements using SorterBenchmark on class java.lang.Integer from 10,000 total elements and 10 runs using sorter: MergeSortBasic
2023-03-12 20:58:47 INFO  Benchmark_Timer - Begin run: Helper for MergeSortBasic with 10000 elements with 10 runs
2023-03-12 20:58:47 INFO  TimeLogger - Raw time per run (mSec):  2.65
2023-03-12 20:58:47 INFO  TimeLogger - Normalized time per run (n log n):  3.73
2023-03-12 20:58:47 INFO  SorterBenchmark - run: sort 10,000 elements using SorterBenchmark on class java.lang.Integer from 10,000 total elements and 10 runs using sorter: HeapSort
2023-03-12 20:58:47 INFO  Benchmark_Timer - Begin run: Helper for HeapSort with 10000 elements with 10 runs
2023-03-12 20:58:47 INFO  TimeLogger - Raw time per run (mSec):  2.17
2023-03-12 20:58:47 INFO  TimeLogger - Normalized time per run (n log n):  3.05
2023-03-12 20:58:47 INFO  SorterBenchmark - run: sort 10,000 elements using SorterBenchmark on class java.lang.Integer from 10,000 total elements and 10 runs using sorter: QuickSort_DualPivot
2023-03-12 20:58:47 INFO  Benchmark_Timer - Begin run: Helper for QuickSort_DualPivot with 10000 elements with 10 runs
2023-03-12 20:58:47 INFO  TimeLogger - Raw time per run (mSec):  1.94
2023-03-12 20:58:47 INFO  TimeLogger - Normalized time per run (n log n):  2.72
2023-03-12 20:58:47 INFO  SorterBenchmark - run: sort 20,000 elements using SorterBenchmark on class java.lang.Integer from 20,000 total elements and 10 runs using sorter: MergeSortBasic
2023-03-12 20:58:47 INFO  Benchmark_Timer - Begin run: Helper for MergeSortBasic with 20000 elements with 10 runs
2023-03-12 20:58:47 INFO  TimeLogger - Raw time per run (mSec):  2.16
2023-03-12 20:58:47 INFO  TimeLogger - Normalized time per run (n log n):  1.40
2023-03-12 20:58:47 INFO  SorterBenchmark - run: sort 20,000 elements using SorterBenchmark on class java.lang.Integer from 20,000 total elements and 10 runs using sorter: HeapSort
2023-03-12 20:58:47 INFO  Benchmark_Timer - Begin run: Helper for HeapSort with 20000 elements with 10 runs
2023-03-12 20:58:47 INFO  TimeLogger - Raw time per run (mSec):  3.20
2023-03-12 20:58:47 INFO  TimeLogger - Normalized time per run (n log n):  2.08
2023-03-12 20:58:47 INFO  SorterBenchmark - run: sort 20,000 elements using SorterBenchmark on class java.lang.Integer from 20,000 total elements and 10 runs using sorter: QuickSort_DualPivot
2023-03-12 20:58:47 INFO  Benchmark_Timer - Begin run: Helper for QuickSort_DualPivot with 20000 elements with 10 runs
2023-03-12 20:58:47 INFO  TimeLogger - Raw time per run (mSec):  5.52
2023-03-12 20:58:47 INFO  TimeLogger - Normalized time per run (n log n):  3.58
2023-03-12 20:58:47 INFO  SorterBenchmark - run: sort 40,000 elements using SorterBenchmark on class java.lang.Integer from 40,000 total elements and 10 runs using sorter: MergeSortBasic
2023-03-12 20:58:47 INFO  Benchmark_Timer - Begin run: Helper for MergeSortBasic with 40000 elements with 10 runs
2023-03-12 20:58:48 INFO  TimeLogger - Raw time per run (mSec):  4.72
2023-03-12 20:58:48 INFO  TimeLogger - Normalized time per run (n log n):  1.42
2023-03-12 20:58:48 INFO  SorterBenchmark - run: sort 40,000 elements using SorterBenchmark on class java.lang.Integer from 40,000 total elements and 10 runs using sorter: HeapSort
2023-03-12 20:58:48 INFO  Benchmark_Timer - Begin run: Helper for HeapSort with 40000 elements with 10 runs
2023-03-12 20:58:48 INFO  TimeLogger - Raw time per run (mSec):  6.34
2023-03-12 20:58:48 INFO  TimeLogger - Normalized time per run (n log n):  1.91
2023-03-12 20:58:48 INFO  SorterBenchmark - run: sort 40,000 elements using SorterBenchmark on class java.lang.Integer from 40,000 total elements and 10 runs using sorter: QuickSort_DualPivot
2023-03-12 20:58:48 INFO  Benchmark_Timer - Begin run: Helper for QuickSort_DualPivot with 40000 elements with 10 runs
2023-03-12 20:58:48 INFO  TimeLogger - Raw time per run (mSec):  4.65
2023-03-12 20:58:48 INFO  TimeLogger - Normalized time per run (n log n):  1.40
2023-03-12 20:58:48 INFO  SorterBenchmark - run: sort 80,000 elements using SorterBenchmark on class java.lang.Integer from 80,000 total elements and 10 runs using sorter: MergeSortBasic
2023-03-12 20:58:48 INFO  Benchmark_Timer - Begin run: Helper for MergeSortBasic with 80000 elements with 10 runs
2023-03-12 20:58:48 INFO  TimeLogger - Raw time per run (mSec):  9.95
2023-03-12 20:58:48 INFO  TimeLogger - Normalized time per run (n log n):  1.40
2023-03-12 20:58:48 INFO  SorterBenchmark - run: sort 80,000 elements using SorterBenchmark on class java.lang.Integer from 80,000 total elements and 10 runs using sorter: HeapSort
2023-03-12 20:58:48 INFO  Benchmark_Timer - Begin run: Helper for HeapSort with 80000 elements with 10 runs
2023-03-12 20:58:48 INFO  TimeLogger - Raw time per run (mSec):  12.74
2023-03-12 20:58:48 INFO  TimeLogger - Normalized time per run (n log n):  1.79
2023-03-12 20:58:48 INFO  SorterBenchmark - run: sort 80,000 elements using SorterBenchmark on class java.lang.Integer from 80,000 total elements and 10 runs using sorter: QuickSort_DualPivot
2023-03-12 20:58:48 INFO  Benchmark_Timer - Begin run: Helper for QuickSort_DualPivot with 80000 elements with 10 runs
2023-03-12 20:58:48 INFO  TimeLogger - Raw time per run (mSec):  10.12
2023-03-12 20:58:48 INFO  TimeLogger - Normalized time per run (n log n):  1.42
2023-03-12 20:58:48 INFO  SorterBenchmark - run: sort 160,000 elements using SorterBenchmark on class java.lang.Integer from 160,000 total elements and 10 runs using sorter: MergeSortBasic
2023-03-12 20:58:48 INFO  Benchmark_Timer - Begin run: Helper for MergeSortBasic with 160000 elements with 10 runs
2023-03-12 20:58:49 INFO  TimeLogger - Raw time per run (mSec):  21.52
2023-03-12 20:58:49 INFO  TimeLogger - Normalized time per run (n log n):  1.41
2023-03-12 20:58:49 INFO  SorterBenchmark - run: sort 160,000 elements using SorterBenchmark on class java.lang.Integer from 160,000 total elements and 10 runs using sorter: HeapSort
2023-03-12 20:58:49 INFO  Benchmark_Timer - Begin run: Helper for HeapSort with 160000 elements with 10 runs
2023-03-12 20:58:49 INFO  TimeLogger - Raw time per run (mSec):  28.17
2023-03-12 20:58:49 INFO  TimeLogger - Normalized time per run (n log n):  1.85
2023-03-12 20:58:49 INFO  SorterBenchmark - run: sort 160,000 elements using SorterBenchmark on class java.lang.Integer from 160,000 total elements and 10 runs using sorter: QuickSort_DualPivot
2023-03-12 20:58:49 INFO  Benchmark_Timer - Begin run: Helper for QuickSort_DualPivot with 160000 elements with 10 runs
2023-03-12 20:58:49 INFO  TimeLogger - Raw time per run (mSec):  21.74
2023-03-12 20:58:49 INFO  TimeLogger - Normalized time per run (n log n):  1.43

Process finished with exit code 0
